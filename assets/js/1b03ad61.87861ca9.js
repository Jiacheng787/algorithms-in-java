"use strict";(self.webpackChunkalgorithm_java=self.webpackChunkalgorithm_java||[]).push([[5087],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),f=o,d=p["".concat(l,".").concat(f)]||p[f]||m[f]||a;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3465:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return m}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],c={sidebar_position:8},l="Leetcode 74 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635",u={unversionedId:"\u5fc5\u77e5\u5fc5\u4f1a\u7b97\u6cd5\u6280\u5de7/Leetcode 74 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635",id:"\u5fc5\u77e5\u5fc5\u4f1a\u7b97\u6cd5\u6280\u5de7/Leetcode 74 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635",title:"Leetcode 74 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635",description:"\u7f16\u5199\u4e00\u4e2a\u9ad8\u6548\u7684\u7b97\u6cd5\u6765\u5224\u65ad m x n \u77e9\u9635\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u76ee\u6807\u503c\u3002\u8be5\u77e9\u9635\u5177\u6709\u5982\u4e0b\u7279\u6027\uff1a",source:"@site/docs/\u5fc5\u77e5\u5fc5\u4f1a\u7b97\u6cd5\u6280\u5de7/Leetcode 74 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635.md",sourceDirName:"\u5fc5\u77e5\u5fc5\u4f1a\u7b97\u6cd5\u6280\u5de7",slug:"/\u5fc5\u77e5\u5fc5\u4f1a\u7b97\u6cd5\u6280\u5de7/Leetcode 74 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635",permalink:"/algorithms-in-java/docs/\u5fc5\u77e5\u5fc5\u4f1a\u7b97\u6cd5\u6280\u5de7/Leetcode 74 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u5fc5\u77e5\u5fc5\u4f1a\u7b97\u6cd5\u6280\u5de7/Leetcode 74 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Leetcode 136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57",permalink:"/algorithms-in-java/docs/\u5fc5\u77e5\u5fc5\u4f1a\u7b97\u6cd5\u6280\u5de7/Leetcode 136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57"}},s={},m=[],p={toc:m};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"leetcode-74-\u641c\u7d22\u4e8c\u7ef4\u77e9\u9635"},"Leetcode 74 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635"),(0,a.kt)("p",null,"\u7f16\u5199\u4e00\u4e2a\u9ad8\u6548\u7684\u7b97\u6cd5\u6765\u5224\u65ad m x n \u77e9\u9635\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u76ee\u6807\u503c\u3002\u8be5\u77e9\u9635\u5177\u6709\u5982\u4e0b\u7279\u6027\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u884c\u4e2d\u7684\u6574\u6570\u4ece\u5de6\u5230\u53f3\u6309\u5347\u5e8f\u6392\u5217\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u884c\u7684\u7b2c\u4e00\u4e2a\u6574\u6570\u5927\u4e8e\u524d\u4e00\u884c\u7684\u6700\u540e\u4e00\u4e2a\u6574\u6570\u3002")),(0,a.kt)("p",null,"\u867d\u7136\u662f\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u4f46\u662f\u7531\u4e8e\u5b83\u7279\u6b8a\u7684\u6709\u5e8f\u6027\uff0c\u6240\u4ee5\u5b8c\u5168\u53ef\u4ee5\u6309\u7167\u4e0b\u6807\u628a\u5b83\u770b\u6210\u4e00\u4e2a\u4e00\u7ef4\u77e9\u9635\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u884c\u5217\u5750\u6807\u8f6c\u6362\u3002\u6700\u540e\u5229\u7528\u4e8c\u5206\u641c\u7d22\u76f4\u63a5\u641c\u7d22\u5373\u53ef\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func searchMatrix(matrix [][]int, target int) bool {\n    if len(matrix) == 0 {\n        return false\n    }\n    m, low, high := len(matrix[0]), 0, len(matrix) * len(matrix[0]) - 1\n    for low <= high {\n        mid := low + (high - low) >> 1\n        if matrix[mid / m][mid % m] == target {\n            return true\n        } else if matrix[mid / m][mid % m] > target {\n            high = mid - 1\n        } else {\n            low = mid + 1\n        }\n    }\n    return false\n}\n")),(0,a.kt)("p",null,"\u4e8c\u5206\u67e5\u627e\u57fa\u672c\u6846\u67b6\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func binarySearch(nums []int, target int) bool {\n    if len(nums) == 0 {\n        return false\n    }\n    low, high := 0, len(nums) - 1\n    for low <= high {\n        mid := low + (high - low) >> 1\n        if nums[mid] == target {\n            return true\n        } else if nums[mid] > target {\n            high = mid - 1\n        } else {\n            low = mid + 1\n        }\n    }\n    return false\n}\n")))}f.isMDXComponent=!0}}]);